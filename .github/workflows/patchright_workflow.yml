name: PatchRight-NodeJS Workflow

on:
  # enabling manual trigger
  workflow_dispatch:
    inputs:
      version:
        description: 'Playwright Version (Base)'
        default: ''
      patchright_release:
        description: 'Patchright Release Version (e.g. `1.55.2`)'
        default: ''
  # running every hour
  schedule:
    - cron: '48 * * * *'


permissions:
  actions: none
  attestations: none
  checks: none
  contents: write
  deployments: none
  id-token: write # For trusted Publishing
  issues: none
  discussions: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none


env:
  REPO: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  patchright-workflow:
    name: "Patchright-NodeJS Workflow: Install, Patch, Build and Publish Patchright Driver"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node v18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      - name: Install TS-Morph
        run: npm install

      - name: Check Release Version
        id: version_check
        run: |
          echo "patchright_release=${{ github.event.inputs.patchright_release }}" >> $GITHUB_ENV
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "proceed=true" >>$GITHUB_OUTPUT
            echo "playwright_version=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            chmod +x utils/release_version_check.sh
            utils/release_version_check.sh
          fi

      - name: Install Playwright-NodeJS Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          git clone https://github.com/microsoft/playwright  --branch ${{ env.playwright_version }}
          cd playwright
          npm ci

      - name: Copy Patchright Patch Scripts
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          git clone https://github.com/StealthCodeLtd/patchright.git
          cp -r patchright/driver_patches ./driver_patches
          rm -rf patchright
          curl -s "https://raw.githubusercontent.com/StealthCodeLtd/patchright/refs/heads/main/patchright_driver_patch.js" | tail -n +13 >> patchright_nodejs_patch.js

      - name: Patch Playwright-NodeJS Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          cd playwright
          node "../patchright_nodejs_patch.js"

      - name: Generate Playwright Channels
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          cd playwright
          node utils/generate_channels.js || echo "Channels generated successfully"

      - name: Build Playwright-NodeJS Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          cd playwright
          npm run build

      - name: Rebrand to Patchright-NodeJS Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          cd playwright
          echo "Before rebranding:"
          ls -la packages/
          node "../patchright_nodejs_rebranding.js"
          echo "Waiting for rebranding to complete..."
          sleep 5
          echo "After rebranding:"
          ls -la packages/
          echo "Checking package names:"
          if [ -f "packages/patchright-core/package.json" ]; then
            echo "patchright-core package.json name:"
            grep '"name"' packages/patchright-core/package.json
          fi
          if [ -f "packages/patchright/package.json" ]; then
            echo "patchright package.json name:"
            grep '"name"' packages/patchright/package.json
          fi

      - name: Create Empty Versioning Release
        if: steps.version_check.outputs.proceed == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.playwright_version }}
          release_name: ${{ env.playwright_version }}
          body: |
            This is an automatic deployment in response to a new release of [microsoft/playwright](https://github.com/microsoft/playwright).
            This Release is only used for Versioning.
          draft: false
          prerelease: false

      - name: Publish Patchright-Core Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          cd playwright/packages/patchright-core/
          echo "Package name in package.json:"
          grep '"name"' package.json
          echo "Package version in package.json:"
          grep '"version"' package.json
          echo "Current directory:"
          pwd
          echo "Files in directory:"
          ls -la
          echo "Whoami check:"
          npm whoami
          npm publish --access=public --provenance --tag latest
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Patchright Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          cd playwright/packages/patchright/
          npm publish --access=public --provenance --tag latest
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}